# Portfolio-Level Technical Analysis Backtest & Reporting PRD (2025-04-27)

## Objective
Implement a backtest system that simulates a single portfolio manager choosing which stock(s) to buy, hold, or sell among all stocks in STOCKS_LIST at each time step. Only long (buy) positions are allowed. No short selling. Always prefer buying when a valid signal is present and cash is available. The system must decide the position size for each buy (full or partial allocation, configurable). At each time step, evaluate all stocks and select the best opportunities based on strategy signals (e.g., SMA, RSI). Maintain a portfolio state: cash, holdings, transaction log, and rationale for each trade. After the simulation, generate a single consolidated PDF report listing all trades (across all stocks), rationale, and portfolio-level performance metrics. Preserve all current report sections (metrics, regime summaries, trade log, rationale summary, etc.) but unify them in one report. No per-ticker reports.

## Key Requirements

### 1. Data Fetching
- Use fetch_all_stocks_data(period) to get data for all stocks in STOCKS_LIST.

### 2. Portfolio Simulation
- Implement a function that, for each time step:
  - Evaluates all stocks for buy/hold/sell signals.
  - Prefers buy if a valid signal and sufficient cash.
  - Allocates position size per stock (all-in or partial).
  - Updates holdings and cash.
  - Records every trade with timestamp, ticker, action, size, and human-readable rationale.

### 3. Trade Log
- Maintain a single transaction log for all trades across all stocks.

### 4. Report Generation
- Generate two reports after the simulation:
  - PDF report: reports/portfolio_report.pdf
  - Markdown report: reports/portfolio_report.md
  Both reports include:
  - All trades (with rationale, ticker, time, action, size, price)
  - Portfolio-level metrics (total return, drawdown, Sharpe, etc.)
  - Per-stock contribution summary
  - Regime summaries and rationale aggregation
  - Analyst notes and visualizations as per current template

### 5. Testing
- Add/modify tests to ensure:
  - Both PDF and Markdown reports are produced
  - Trade log contains trades for multiple tickers
  - Rationale is present and clear for every trade
  - No short selling occurs
  - Buy preference and position sizing logic are enforced

### 6. Documentation
- Update summary.md and tasks.md to reflect this architecture and workflow.

## File Structure (Suggested)
- tech_analysis/
  - pipeline.py
  - backtest.py
  - report_generator.py
  - data/

## Out of Scope
- Real-time trading execution (unless specifically requested)
- Large-scale strategy library (limit to core examples)

## Success Criteria
- Reports are clear, comprehensive, and actionable for technical analysts.
- All relevant market and transaction context is included.
- Analysts can easily identify areas for improvement.
